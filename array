//Сортировка массива пузырьковым методом
//Вывод номера досрочной итерации и вывод самого отсортированного массива

#include <iostream>

int main()
{
	setlocale(LC_ALL, "rus");
	const int length(9);
	int array[length] = { 7, 5, 6, 4, 9, 8, 2, 1, 3};


	/*
			первый этап
		 7 5 6 4 9 8 2 1 3
		/5 7/ 6 4 9 8 2 1 3
		5 /6 7/ 4 9 8 2 1 3
		5 6 /4 7/ 9 8 2 1 3
		5 6 4 7 /8 9/ 2 1 3
		5 6 4 7 8 /2 9/ 1 3
		5 6 4 7 8 2 /1 9/ 3
		5 6 4 7 8 2 1 /3 9/
		5 6 4 7 8 2 1 /3 9/
		...................
	*/

	int endOfArrayIndex(0);//Для записи досрочного выполнения программы

						   
	//Так как наибольшее значение "пузырится" до конца, то мы начинаем отсчитывать итерации тоже с конца
	for(int iteration = length; iteration > 0; --iteration)
	{
		
		bool swapped(false);//Для просмотра наличия изменений в массиве за одну итерацию

		for (int currentIndex = 0; currentIndex < iteration-1; ++currentIndex)
		{
			if (array[currentIndex] > array[currentIndex + 1])//Сортируем массив по возрастанию
			{
				std::swap(array[currentIndex], array[currentIndex + 1]);
				swapped = true;//Фиксируем изменения
			}
		}

		++endOfArrayIndex;//Засчитываем итерацию

		if (!swapped) //!false - true -- если не было ни одного изменения, значит массив отсортирован
		{			
			//Указываем последнюю итерацию (считая ту, в которой не было изменений) и получаем число, если бы мы считали от одного
			std::cout << "Досрочное прекращение на итерации: " << endOfArrayIndex << "\n";
			break;
		}
	}

	//Выводим массив в консоль
	for (int index = 0; index < length; ++index)
		std::cout << array[index] << " ";

	return 0;
}
